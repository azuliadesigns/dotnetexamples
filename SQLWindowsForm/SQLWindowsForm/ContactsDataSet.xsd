<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="ContactsDataSet" targetNamespace="http://tempuri.org/ContactsDataSet.xsd" xmlns:mstns="http://tempuri.org/ContactsDataSet.xsd" xmlns="http://tempuri.org/ContactsDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="ContactsConnectionString" ConnectionStringObject="" IsAppSettingsProperty="True" Modifier="Assembly" Name="ContactsConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.SQLWindowsForm.Properties.Settings.GlobalReference.Default.ContactsConnectionString" Provider="System.Data.SqlClient">
          </Connection>
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ContactsTableAdapter" GeneratorDataComponentClassName="ContactsTableAdapter" Name="Contacts" UserDataComponentName="ContactsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ContactsConnectionString (Settings)" DbObjectName="dbo.Contacts" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="True" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>DELETE FROM [dbo].[Contacts] WHERE (([ContactID] = @Original_ContactID) AND ((@IsNull_ContactName = 1 AND [ContactName] IS NULL) OR ([ContactName] = @Original_ContactName)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ContactID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ContactID" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="True" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ContactName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ContactName" SourceColumnNullMapping="True" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="True" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ContactName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ContactName" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>INSERT INTO [dbo].[Contacts] ([ContactName]) VALUES (@ContactName);
SELECT ContactID, ContactName FROM Contacts WHERE (ContactID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="True" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ContactName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ContactName" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>SELECT ContactID, ContactName FROM dbo.Contacts</CommandText>
                    <Parameters>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>UPDATE [dbo].[Contacts] SET [ContactName] = @ContactName WHERE (([ContactID] = @Original_ContactID) AND ((@IsNull_ContactName = 1 AND [ContactName] IS NULL) OR ([ContactName] = @Original_ContactName)));
SELECT ContactID, ContactName FROM Contacts WHERE (ContactID = @ContactID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="True" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ContactName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ContactName" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ContactID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ContactID" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="True" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ContactName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ContactName" SourceColumnNullMapping="True" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="True" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ContactName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ContactName" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="ContactID" ColumnName="ContactID" DataSourceName="[C:\DOCUMENTS AND SETTINGS\ADMINISTRATOR.SOFTECH125\DESKTOP\SHARE\SQLWINDOWSFORM\SQLWINDOWSFORM\CONTACTS.MDF].dbo.Contacts" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ContactID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ContactID" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ContactID" DataSetColumn="ContactID" />
              <Mapping SourceColumn="ContactName" DataSetColumn="ContactName" />
            </Mappings>
            <Sources>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources>
        </Sources>
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="ContactsDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="ContactsDataSet" msprop:Generator_DataSetName="ContactsDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Contacts" msprop:Generator_UserTableName="Contacts" msprop:Generator_RowDeletedName="ContactsRowDeleted" msprop:Generator_TableClassName="ContactsDataTable" msprop:Generator_RowChangedName="ContactsRowChanged" msprop:Generator_RowClassName="ContactsRow" msprop:Generator_RowChangingName="ContactsRowChanging" msprop:Generator_RowEvArgName="ContactsRowChangeEvent" msprop:Generator_RowEvHandlerName="ContactsRowChangeEventHandler" msprop:Generator_TablePropName="Contacts" msprop:Generator_TableVarName="tableContacts" msprop:Generator_RowDeletingName="ContactsRowDeleting">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ContactID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msprop:Generator_UserColumnName="ContactID" msprop:Generator_ColumnPropNameInRow="ContactID" msprop:Generator_ColumnVarNameInTable="columnContactID" msprop:Generator_ColumnPropNameInTable="ContactIDColumn" type="xs:int" />
              <xs:element name="ContactName" msprop:Generator_UserColumnName="ContactName" msprop:Generator_ColumnPropNameInRow="ContactName" msprop:Generator_ColumnVarNameInTable="columnContactName" msprop:Generator_ColumnPropNameInTable="ContactNameColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Contacts" />
      <xs:field xpath="mstns:ContactID" />
    </xs:unique>
  </xs:element>
</xs:schema>